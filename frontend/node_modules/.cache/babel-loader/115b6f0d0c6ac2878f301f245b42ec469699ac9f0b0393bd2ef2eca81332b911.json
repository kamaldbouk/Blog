{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        throw new Error(json.error || 'Signup failed');\n      }\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"leglVsSbW4DJnC7nVdCyJFB0GD8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","Error","localStorage","setItem","type","payload","message"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from './useAuthContext'\n\nexport const useSignup = () => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const { dispatch } = useAuthContext()\n\n  const signup = async (email, password) => {\n    setIsLoading(true)\n    setError(null)\n\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ email, password })\n      });\n      \n      const json = await response.json()\n\n      if (!response.ok) {\n        throw new Error(json.error || 'Signup failed')\n      }\n\n      localStorage.setItem('user', JSON.stringify(json))\n      dispatch({type: 'LOGIN', payload: json})\n    } catch (error) {\n      setError(error.message)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return { signup, isLoading, error }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;QAClDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACf,KAAK,IAAI,eAAe,CAAC;MAChD;MAEAkB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDX,QAAQ,CAAC;QAACgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACsB,OAAO,CAAC;IACzB,CAAC,SAAS;MACRnB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAAD,EAAA,CAhCYD,SAAS;EAAA,QAGCD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}