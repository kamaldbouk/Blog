{"ast":null,"code":"var _jsxFileName = \"/Users/kamaldbouk/Desktop/blog/frontend/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport PersonalProfile from '../components/PersonalProfile';\nimport BlogProfileView from '../components/BlogProfileView';\nimport { useBlogsContext } from '../hooks/useBlogsContext';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    blogs\n  } = useBlogsContext();\n  const {\n    user\n  } = useAuthContext();\n  const handleNew = () => {\n    navigate('/create');\n  };\n  const handleBackToProfile = () => {\n    setShowFriendsList(false);\n  };\n  const fetchFriends = async () => {\n    try {\n      console.log('User:', user);\n      const response = await fetch(`/api/users/${user._id}/friends`);\n      if (!response.ok) {\n        throw new Error('Error');\n      }\n      const data = await response.json();\n      setFriends(data);\n    } catch (error) {\n      console.error('Error fetching friends:', error);\n    }\n  };\n  const userBlogs = blogs ? blogs.filter(blog => blog.author === user.name) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [showFriendsList ? /*#__PURE__*/_jsxDEV(FriendsList, {\n      friends: friends,\n      handleBackToProfile: handleBackToProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PersonalProfile, {\n      user: user,\n      handleViewFriends: handleViewFriends\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-activity\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Account Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"write-new-blog-btn\",\n        onClick: handleNew,\n        children: \"Write New Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-items-container\",\n        children: userBlogs && userBlogs.map(blog => /*#__PURE__*/_jsxDEV(BlogProfileView, {\n          blog: blog\n        }, blog._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"XvL7UoGzOuqj9ScyiGU2HzbTe8g=\", false, function () {\n  return [useNavigate, useBlogsContext, useAuthContext];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useNavigate","PersonalProfile","BlogProfileView","useBlogsContext","useAuthContext","jsxDEV","_jsxDEV","Profile","_s","navigate","blogs","user","handleNew","handleBackToProfile","setShowFriendsList","fetchFriends","console","log","response","fetch","_id","ok","Error","data","json","setFriends","error","userBlogs","filter","blog","author","name","className","children","showFriendsList","FriendsList","friends","fileName","_jsxFileName","lineNumber","columnNumber","handleViewFriends","onClick","map","_c","$RefreshReg$"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/pages/Profile.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport PersonalProfile from '../components/PersonalProfile';\nimport BlogProfileView from '../components/BlogProfileView';\nimport { useBlogsContext } from '../hooks/useBlogsContext';\nimport { useAuthContext } from '../hooks/useAuthContext';\n\nconst Profile = () => {\n  \n    const navigate = useNavigate();\n    const { blogs } = useBlogsContext();\n    const { user } = useAuthContext();\n\n\n    const handleNew = () => {\n        navigate('/create');\n    };\n\n    const handleBackToProfile = () => {\n        setShowFriendsList(false);\n    };\n\n    const fetchFriends = async () => {\n    try {\n        console.log('User:', user); \n        const response = await fetch(`/api/users/${user._id}/friends`);\n        if (!response.ok) {\n            throw new Error('Error');\n        }\n        const data = await response.json();\n        setFriends(data);\n    } catch (error) {\n        console.error('Error fetching friends:', error);\n    }\n};\n\n    \n    const userBlogs = blogs ? blogs.filter(blog => blog.author === user.name) : [];\n\n    return (\n        <div className=\"profile-container\">\n            {showFriendsList ? (\n                <FriendsList friends={friends} handleBackToProfile={handleBackToProfile} />\n            ) : (\n                <PersonalProfile\n                    user={user}\n                    handleViewFriends={handleViewFriends}\n                />\n            )}\n            <div className='profile-activity'>\n                <h1>Account Activity</h1>\n                <button className=\"write-new-blog-btn\" onClick={handleNew}>Write New Blog</button>\n                <div className='blog-items-container'>\n                    {userBlogs && userBlogs.map((blog) => (\n                        <BlogProfileView key={blog._id} blog={blog} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}