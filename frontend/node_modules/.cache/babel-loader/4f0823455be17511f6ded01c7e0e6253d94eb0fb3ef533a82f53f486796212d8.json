{"ast":null,"code":"import { useState } from 'react';\nimport logPic from './img/log-pic.png';\nimport { useLogin } from \"../hooks/useLogin\";\nconst handleLogin = async e => {\n  e.preventDefault();\n  let errors = [];\n  if (email.length === 0 && password.length === 0) {\n    errors.push('All fields are required.');\n  } else {\n    if (email.length === 0) {\n      errors.push('Please enter your email.');\n    }\n    if (password.length === 0) {\n      errors.push('Please enter your password.');\n    }\n  }\n  if (errors.length > 0) {\n    setErrors(errors);\n    return; // Exit if there are validation errors\n  }\n  setErrors([]);\n  try {\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const result = await response.json();\n    if (!response.ok) {\n      throw new Error(result.message || 'Login failed');\n    }\n    console.log('Login successful', result);\n\n    // Store token or user info if needed\n    localStorage.setItem('token', result.token); // Example\n\n    // Redirect to another page\n    navigate('/dashboard'); // Change to the desired route\n  } catch (err) {\n    setErrors([err.message]);\n  } finally {\n    setIsLoading(false);\n  }\n};\n\n//     return (\n//         <div className=\"login-container\">\n//             <div className=\"login-all\">\n//                 <div className=\"log-info\">\n//                     <h1>Welcome back!</h1>\n//                     <form className='login' onSubmit={handleLogin}>\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input className=\"email\" type=\"text\" id=\"email\" placeholder='Enter your email here...' onChange={(e) => setEmail(e.target.value)} value={email} />\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input className=\"password\" type=\"password\" id=\"password\" placeholder='Enter your password here...' onChange={(e) => setPassword(e.target.value)} value={password} />\n//                         <button disabled={isLoading}>Login</button>\n//                     </form>\n//                     {errors.length > 0 && (\n//                         <div className=\"error-messages\">\n//                             {errors.map((error, index) => (\n//                                 <p key={index} className=\"error\">{error}</p>\n//                             ))}\n//                         </div>\n//                     )}\n\n//                     <p>Don't have an account? Sign up <a href=\"/register\">here</a>.</p>\n//                 </div>\n\n//                 <div className=\"log-img\">\n//                     <img src={logPic} alt=\"Login illustration\" /> \n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nexport default Login;","map":{"version":3,"names":["useState","logPic","useLogin","handleLogin","e","preventDefault","errors","email","length","password","push","setErrors","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","message","console","log","localStorage","setItem","token","navigate","err","setIsLoading","Login"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport logPic from './img/log-pic.png';\nimport { useLogin } from \"../hooks/useLogin\"\n\nconst handleLogin = async (e) => {\n    e.preventDefault();\n\n    let errors = [];\n\n    if (email.length === 0 && password.length === 0) {\n        errors.push('All fields are required.');\n    } else {\n        if (email.length === 0) {\n            errors.push('Please enter your email.');\n        }\n        if (password.length === 0) {\n            errors.push('Please enter your password.');\n        }\n    }\n\n    if (errors.length > 0) {\n        setErrors(errors);\n        return; // Exit if there are validation errors\n    }\n\n    setErrors([]);\n\n    try {\n        const response = await fetch('/api/users/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email, password }),\n        });\n\n        const result = await response.json();\n\n        if (!response.ok) {\n            throw new Error(result.message || 'Login failed');\n        }\n\n        console.log('Login successful', result);\n        \n        // Store token or user info if needed\n        localStorage.setItem('token', result.token); // Example\n\n        // Redirect to another page\n        navigate('/dashboard'); // Change to the desired route\n    } catch (err) {\n        setErrors([err.message]);\n    } finally {\n        setIsLoading(false);\n    }\n};\n\n\n//     return (\n//         <div className=\"login-container\">\n//             <div className=\"login-all\">\n//                 <div className=\"log-info\">\n//                     <h1>Welcome back!</h1>\n//                     <form className='login' onSubmit={handleLogin}>\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input className=\"email\" type=\"text\" id=\"email\" placeholder='Enter your email here...' onChange={(e) => setEmail(e.target.value)} value={email} />\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input className=\"password\" type=\"password\" id=\"password\" placeholder='Enter your password here...' onChange={(e) => setPassword(e.target.value)} value={password} />\n//                         <button disabled={isLoading}>Login</button>\n//                     </form>\n//                     {errors.length > 0 && (\n//                         <div className=\"error-messages\">\n//                             {errors.map((error, index) => (\n//                                 <p key={index} className=\"error\">{error}</p>\n//                             ))}\n//                         </div>\n//                     )}\n\n//                     <p>Don't have an account? Sign up <a href=\"/register\">here</a>.</p>\n//                 </div>\n\n//                 <div className=\"log-img\">\n//                     <img src={logPic} alt=\"Login illustration\" /> \n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nexport default Login;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAIC,KAAK,CAACC,MAAM,KAAK,CAAC,IAAIC,QAAQ,CAACD,MAAM,KAAK,CAAC,EAAE;IAC7CF,MAAM,CAACI,IAAI,CAAC,0BAA0B,CAAC;EAC3C,CAAC,MAAM;IACH,IAAIH,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACpBF,MAAM,CAACI,IAAI,CAAC,0BAA0B,CAAC;IAC3C;IACA,IAAID,QAAQ,CAACD,MAAM,KAAK,CAAC,EAAE;MACvBF,MAAM,CAACI,IAAI,CAAC,6BAA6B,CAAC;IAC9C;EACJ;EAEA,IAAIJ,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IACnBG,SAAS,CAACL,MAAM,CAAC;IACjB,OAAO,CAAC;EACZ;EAEAK,SAAS,CAAC,EAAE,CAAC;EAEb,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,KAAK;QAAEE;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,MAAMU,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAEpC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,cAAc,CAAC;IACrD;IAEAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,MAAM,CAAC;;IAEvC;IACAO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC;;IAE7C;IACAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVnB,SAAS,CAAC,CAACmB,GAAG,CAACP,OAAO,CAAC,CAAC;EAC5B,CAAC,SAAS;IACNQ,YAAY,CAAC,KAAK,CAAC;EACvB;AACJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}