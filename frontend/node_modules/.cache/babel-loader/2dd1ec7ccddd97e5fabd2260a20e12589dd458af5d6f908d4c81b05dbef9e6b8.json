{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        throw new Error(json.error || 'Login failed');\n      }\n\n      // Store user data in localStorage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // Update the context state\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n    } catch (error) {\n      console.error('Error during login:', error.message);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n\n// import { useState } from 'react'\n// import { useAuthContext } from './useAuthContext'\n\n// export const useLogin = () => {\n\n//   const [error, setError] = useState(null)\n//   const [isLoading, setIsLoading] = useState(false)\n//   const { dispatch } = useAuthContext()\n\n//   const login = async (email, password) => {\n//     setIsLoading(true);\n//     setError(null);\n\n//     const response = await fetch('/api/user/login', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n\n//     const json = await response.json();\n//     console.log('Login response:', json); // Debug log\n\n//     if (!response.ok) {\n//       setIsLoading(false);\n//       setError(json.error);\n\n//     } else {\n//       localStorage.setItem('user', JSON.stringify(json));\n//       console.log('hello')\n//       dispatch({ type: 'LOGIN', payload: json });\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return { login, isLoading, error }\n// }\n_s(useLogin, \"leglVsSbW4DJnC7nVdCyJFB0GD8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","Error","localStorage","setItem","type","payload","console","message"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\n\nexport const useLogin = () => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { dispatch } = useAuthContext();\n\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/user/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const json = await response.json();\n      if (!response.ok) {\n        throw new Error(json.error || 'Login failed');\n      }\n\n      // Store user data in localStorage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // Update the context state\n      dispatch({ type: 'LOGIN', payload: json });\n\n    } catch (error) {\n      console.error('Error during login:', error.message);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { login, isLoading, error };\n};\n\n\n// import { useState } from 'react'\n// import { useAuthContext } from './useAuthContext'\n\n// export const useLogin = () => {\n\n//   const [error, setError] = useState(null)\n//   const [isLoading, setIsLoading] = useState(false)\n//   const { dispatch } = useAuthContext()\n\n//   const login = async (email, password) => {\n//     setIsLoading(true);\n//     setError(null);\n  \n//     const response = await fetch('/api/user/login', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n  \n//     const json = await response.json();\n//     console.log('Login response:', json); // Debug log\n  \n//     if (!response.ok) {\n//       setIsLoading(false);\n//       setError(json.error);\n\n//     } else {\n//       localStorage.setItem('user', JSON.stringify(json));\n//       console.log('hello')\n//       dispatch({ type: 'LOGIN', payload: json });\n//       setIsLoading(false);\n//     }\n//   };\n  \n\n//   return { login, isLoading, error }\n// }"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACf,KAAK,IAAI,cAAc,CAAC;MAC/C;;MAEA;MACAkB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAAEgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAK,CAAC,CAAC;IAE5C,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdsB,OAAO,CAACtB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACuB,OAAO,CAAC;MACnDtB,QAAQ,CAACD,KAAK,CAACuB,OAAO,CAAC;IACzB,CAAC,SAAS;MACRpB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACpC,CAAC;;AAGD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AAAAD,EAAA,CA3EaD,QAAQ;EAAA,QAGED,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}