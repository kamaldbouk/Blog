{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    console.log('Login response:', json); // Debug log\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    } else {\n      localStorage.setItem('user', JSON.stringify(json));\n      console.log('User saved to localStorage:', json); // Debug log\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","console","log","ok","localStorage","setItem","type","payload"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from './useAuthContext'\n\nexport const useLogin = () => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(null)\n  const { dispatch } = useAuthContext()\n\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n  \n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password }),\n    });\n  \n    const json = await response.json();\n    console.log('Login response:', json); // Debug log\n  \n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    } else {\n      localStorage.setItem('user', JSON.stringify(json));\n      console.log('User saved to localStorage:', json); // Debug log\n      dispatch({ type: 'LOGIN', payload: json });\n      setIsLoading(false);\n    }\n  };\n  \n\n  return { login, isLoading, error }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC,CAAC,CAAC;;IAEtC,IAAI,CAACP,QAAQ,CAACU,EAAE,EAAE;MAChBf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACtB,CAAC,MAAM;MACLmB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,IAAI,CAAC,CAAC,CAAC;MAClDX,QAAQ,CAAC;QAAEiB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEP;MAAK,CAAC,CAAC;MAC1CZ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAGD,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACpC,CAAC;AAAAD,EAAA,CA/BYD,QAAQ;EAAA,QAGED,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}