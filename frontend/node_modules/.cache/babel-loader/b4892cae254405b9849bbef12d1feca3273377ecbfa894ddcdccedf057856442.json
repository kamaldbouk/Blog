{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (name, email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n\n      // Check if the response is JSON\n      const contentType = response.headers.get('Content-Type');\n      if (contentType && contentType.includes('application/json')) {\n        const json = await response.json();\n        if (!response.ok) {\n          throw new Error(json.error || 'Signup failed');\n        }\n        localStorage.setItem('user', JSON.stringify(json));\n        dispatch({\n          type: 'LOGIN',\n          payload: json\n        });\n      } else {\n        // Handle unexpected response format\n        const text = await response.text();\n        throw new Error('Unexpected response format: ' + text);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"leglVsSbW4DJnC7nVdCyJFB0GD8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","name","email","password","response","fetch","method","headers","body","JSON","stringify","contentType","get","includes","json","ok","Error","localStorage","setItem","type","payload","text","message"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from './useAuthContext'\n\nexport const useSignup = () => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const { dispatch } = useAuthContext()\n\n  const signup = async (name, email, password) => {\n    setIsLoading(true)\n    setError(null)\n\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name, email, password })\n      });\n\n      // Check if the response is JSON\n      const contentType = response.headers.get('Content-Type');\n      if (contentType && contentType.includes('application/json')) {\n        const json = await response.json();\n\n        if (!response.ok) {\n          throw new Error(json.error || 'Signup failed');\n        }\n\n        localStorage.setItem('user', JSON.stringify(json));\n        dispatch({ type: 'LOGIN', payload: json });\n      } else {\n        // Handle unexpected response format\n        const text = await response.text();\n        throw new Error('Unexpected response format: ' + text);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return { signup, isLoading, error }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9CL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;QAClDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,IAAI;UAAEC,KAAK;UAAEC;QAAS,CAAC;MAChD,CAAC,CAAC;;MAEF;MACA,MAAMQ,WAAW,GAAGP,QAAQ,CAACG,OAAO,CAACK,GAAG,CAAC,cAAc,CAAC;MACxD,IAAID,WAAW,IAAIA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC3D,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACU,IAAI,CAAC,CAAC;QAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACnB,KAAK,IAAI,eAAe,CAAC;QAChD;QAEAsB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAET,IAAI,CAACC,SAAS,CAACI,IAAI,CAAC,CAAC;QAClDf,QAAQ,CAAC;UAAEoB,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEN;QAAK,CAAC,CAAC;MAC5C,CAAC,MAAM;QACL;QACA,MAAMO,IAAI,GAAG,MAAMjB,QAAQ,CAACiB,IAAI,CAAC,CAAC;QAClC,MAAM,IAAIL,KAAK,CAAC,8BAA8B,GAAGK,IAAI,CAAC;MACxD;IACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC2B,OAAO,CAAC;IACzB,CAAC,SAAS;MACRxB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAAD,EAAA,CAxCYD,SAAS;EAAA,QAGCD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}