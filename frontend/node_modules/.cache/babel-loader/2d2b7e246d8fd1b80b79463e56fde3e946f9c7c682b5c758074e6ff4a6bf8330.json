{"ast":null,"code":"import { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\n\n// export const useLogin = () => {\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { dispatch } = useAuthContext();\n\n//   const login = async (email, password) => {\n//     setIsLoading(true);\n//     setError(null);\n\n//     try {\n//       const response = await fetch('/api/users/login', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       const result = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(result.message || 'Login failed');\n//       }\n\n//       localStorage.setItem('user', JSON.stringify(result));\n//       dispatch({ type: 'LOGIN', payload: result });\n\n//       return result;\n\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return { login, isLoading, error };\n// };","map":{"version":3,"names":["useState","useAuthContext"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\n\n// export const useLogin = () => {\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { dispatch } = useAuthContext();\n\n//   const login = async (email, password) => {\n//     setIsLoading(true);\n//     setError(null);\n\n//     try {\n//       const response = await fetch('/api/users/login', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       const result = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(result.message || 'Login failed');\n//       }\n\n//       localStorage.setItem('user', JSON.stringify(result));\n//       dispatch({ type: 'LOGIN', payload: result });\n\n//       return result;\n\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return { login, isLoading, error };\n// };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}