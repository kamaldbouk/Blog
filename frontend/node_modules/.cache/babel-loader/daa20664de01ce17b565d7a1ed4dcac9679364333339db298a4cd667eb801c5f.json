{"ast":null,"code":"var _jsxFileName = \"/Users/kamaldbouk/Desktop/blog/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLogin } from '../hooks/useLogin'; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    login,\n    isLoading,\n    error\n  } = useLogin(); // Destructure login from useLogin\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form submitted with email:', email); // Debug log\n    await login(email, password); // Call the login function with input values\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Loading...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"UBpbeg1VKpXJnoYzvJI0oBSg28Y=\", false, function () {\n  return [useLogin];\n});\n_c = Login;\nexport default Login;\n\n// import { useState } from 'react';\n// import logPic from './img/log-pic.png';\n// import { useLogin } from \"../hooks/useLogin\"\n// import { useNavigate } from 'react-router-dom';\n// import { useAuthContext } from '../context/AuthContext';\n\n// const Login = () => {\n\n//     const [errors, setErrors] = useState([]);\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const {login, error, isLoading} = useLogin()\n//     const navigate = useNavigate();\n//     const { user, dispatch } = useAuthContext();\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n\n//         let errors = [];\n\n//         if (email.length === 0 && password.length === 0) {\n//             errors.push('All fields are required.');\n//         } else {\n//             if (email.length === 0) {\n//                 errors.push('Please enter your email.');\n//             }\n//             if (password.length === 0) {\n//                 errors.push('Please enter your password.');\n//             }\n//         }\n\n//         if (errors.length > 0) {\n//             setErrors(errors);\n//             return; // Exit if there are validation errors\n//         }\n\n//         setErrors([]);\n\n//         try {\n//             const response = await fetch('/api/users/login', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ email, password }),\n//             });\n\n//             const result = await response.json();\n\n//             if (!response.ok) {\n//                 throw new Error(result.message || 'Login failed');\n//             }\n//             console.log('Login successful', result);\n\n//             navigate('/home'); \n\n//         } catch (err) {\n//             setErrors([err.message]);\n//         }\n\n//         console.log('Current user:', user); // Add this line to check state\n\n//     }\n\n//     return (\n//         <div className=\"login-container\">\n//             <div className=\"login-all\">\n//                 <div className=\"log-info\">\n//                     <h1>Welcome back!</h1>\n//                     <form className='login' onSubmit={handleLogin}>\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input className=\"email\" type=\"text\" id=\"email\" placeholder='Enter your email here...' onChange={(e) => setEmail(e.target.value)} value={email} />\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input className=\"password\" type=\"password\" id=\"password\" placeholder='Enter your password here...' onChange={(e) => setPassword(e.target.value)} value={password} />\n//                         <button disabled={isLoading}>Login</button>\n//                     </form>\n//                     {errors.length > 0 && (\n//                         <div className=\"error-messages\">\n//                             {errors.map((error, index) => (\n//                                 <p key={index} className=\"error\">{error}</p>\n//                             ))}\n//                         </div>\n//                     )}\n\n//                     <p>Don't have an account? Sign up <a href=\"/register\">here</a>.</p>\n//                 </div>\n\n//                 <div className=\"log-img\">\n//                     <img src={logPic} alt=\"Login illustration\" /> \n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useLogin","jsxDEV","_jsxDEV","Login","_s","login","isLoading","error","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/kamaldbouk/Desktop/blog/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLogin } from '../hooks/useLogin'; // Adjust the path if needed\n\nconst Login = () => {\n  const { login, isLoading, error } = useLogin(); // Destructure login from useLogin\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log('Form submitted with email:', email); // Debug log\n    await login(email, password); // Call the login function with input values\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          required\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Login'}\n        </button>\n        {error && <p>{error}</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n\n\n\n// import { useState } from 'react';\n// import logPic from './img/log-pic.png';\n// import { useLogin } from \"../hooks/useLogin\"\n// import { useNavigate } from 'react-router-dom';\n// import { useAuthContext } from '../context/AuthContext';\n\n// const Login = () => {\n\n//     const [errors, setErrors] = useState([]);\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const {login, error, isLoading} = useLogin()\n//     const navigate = useNavigate();\n//     const { user, dispatch } = useAuthContext();\n\n\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n\n//         let errors = [];\n\n//         if (email.length === 0 && password.length === 0) {\n//             errors.push('All fields are required.');\n//         } else {\n//             if (email.length === 0) {\n//                 errors.push('Please enter your email.');\n//             }\n//             if (password.length === 0) {\n//                 errors.push('Please enter your password.');\n//             }\n//         }\n\n//         if (errors.length > 0) {\n//             setErrors(errors);\n//             return; // Exit if there are validation errors\n//         }\n\n//         setErrors([]);\n\n//         try {\n//             const response = await fetch('/api/users/login', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ email, password }),\n//             });\n\n//             const result = await response.json();\n\n//             if (!response.ok) {\n//                 throw new Error(result.message || 'Login failed');\n//             }\n//             console.log('Login successful', result);\n\n//             navigate('/home'); \n\n\n//         } catch (err) {\n//             setErrors([err.message]);\n//         }\n\n//         console.log('Current user:', user); // Add this line to check state\n\n//     }\n\n//     return (\n//         <div className=\"login-container\">\n//             <div className=\"login-all\">\n//                 <div className=\"log-info\">\n//                     <h1>Welcome back!</h1>\n//                     <form className='login' onSubmit={handleLogin}>\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input className=\"email\" type=\"text\" id=\"email\" placeholder='Enter your email here...' onChange={(e) => setEmail(e.target.value)} value={email} />\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input className=\"password\" type=\"password\" id=\"password\" placeholder='Enter your password here...' onChange={(e) => setPassword(e.target.value)} value={password} />\n//                         <button disabled={isLoading}>Login</button>\n//                     </form>\n//                     {errors.length > 0 && (\n//                         <div className=\"error-messages\">\n//                             {errors.map((error, index) => (\n//                                 <p key={index} className=\"error\">{error}</p>\n//                             ))}\n//                         </div>\n//                     )}\n\n//                     <p>Don't have an account? Sign up <a href=\"/register\">here</a>.</p>\n//                 </div>\n\n//                 <div className=\"log-img\">\n//                     <img src={logPic} alt=\"Login illustration\" /> \n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}